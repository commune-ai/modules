{
    "code": {
        "py.py": "import os\nimport sys\nimport subprocess\nimport shutil\nimport commune as c\n\nclass Py(c.Module):\n    def __init__(self, venv_path=None):\n        self.set_venv_path(venv_path)\n\n    def set_venv_path(self, venv_path):\n        self.venv_path = venv_path or os.path.expanduser('~/.envs')\n        os.makedirs(self.venv_path, exist_ok=True)\n\n    def create(self, env):\n        env_path = os.path.join(self.venv_path, env)\n        if os.path.exists(env_path):\n            print(f\"Environment {env} already exists.\")\n            return\n        subprocess.check_call([sys.executable, '-m', 'venv', env_path])\n        return {'msg': f\"Created environment {env} at {env_path}\"}\n\n    def remove(self, env):\n        env_path = os.path.join(self.venv_path, env)\n        if not os.path.exists(env_path):\n            print(f\"Environment {env} does not exist.\")\n            return\n        shutil.rmtree(env_path)\n        return dict(msg=f\"Deleted environment {env}\")\n\n    def install(self, env, package_name):\n        env_path = os.path.join(self.venv_path, env, 'bin' if os.name == 'posix' else 'Scripts', 'python')\n        initial_args = [env_path, '-m', 'pip', 'install']\n        if os.path.exists(package_name):\n            initial_args += ['-e']\n        if not os.path.exists(env_path):\n            print(f\"Environment {env} does not exist.\")\n            return\n        subprocess.check_call([*initial_args, package_name])\n        return dict(msg=f\"Installed {package_name} in environment {env}\")\n\n    def env2path(self):\n        env_paths =  c.ls(self.venv_path)\n        return {v.split('/')[-1] : v for v in env_paths}\n    \n\n    def envs(self):\n        return list(self.env2path().keys())\n    def env2libs(self):\n        return {env:self.libs(env) for env in self.envs()}\n    \n    \n    def envs_paths(self):\n        return list(self.env2path().values())\n\n    def libs(self, env=None, search=None):\n        '''Available environments:'''\n        env = self.get_env(env)\n        env_path = os.path.join(self.venv_path, env, 'bin' if os.name == 'posix' else 'Scripts', 'python')\n        if not os.path.exists(env_path):\n            print(f\"Environment {env} does not exist.\")\n            return\n        output = subprocess.check_output([env_path, '-m', 'pip', 'list']).decode('utf-8')\n        output =  {line.split(' ')[0]:line.split(' ')[-1] for line in output.split('\\n')[2:-1]}\n\n        if search:\n            output = {k:v for k,v in output.items()}\n        \n        return output\n    \n    def get_env(self, env):\n        envs = self.envs()\n        if not env:\n            env = envs[0]\n        assert env in envs, f\"Environment {env} does not exist, create one using `create_env`\"\n        print('Selecting environment')\n        return env\n    \n    def get_activation_path(self, env):\n        env = self.get_env(env)\n        env_path = os.path.join(self.venv_path, env, 'bin' if os.name == 'posix' else 'Scripts')\n        if not os.path.exists(env_path):\n            print(f\"Environment {env} does not exist.\")\n            return\n        activation_script = os.path.join(env_path, 'activate') if os.name == 'posix' else os.path.join(env_path, 'Scripts', 'activate.bat')\n        return activation_script\n    \n\n    def run(self, path=c.repo_name+'/modules/sandbox.py', env=\"bt\"):\n        env = self.get_env(env)\n        env_path = os.path.join(self.venv_path, env, 'bin' if os.name == 'posix' else 'Scripts')\n        # run the script with the selected environment without activating it\n        if not os.path.exists(env_path):\n            print(f\"Environment {env} does not exist.\")\n            return\n        cmd = f'{env_path}/python {path}'\n        os.system(cmd)\n    \n    def env2cmd(self):\n        env2cmd = {}\n        for env, path in self.env2path().items():\n            env2cmd[env] = f'{path}/bin/activate'\n        return env2cmd\n            \n    def enter(self, env):\n        env = self.get_env(env)\n        env_path = os.path.join(self.venv_path, env, 'bin' if os.name == 'posix' else 'Scripts')\n        if not os.path.exists(env_path):\n            print(f\"Environment {env} does not exist.\")\n            return\n        activation_script = os.path.join(env_path, 'activate') if os.name == 'posix' else os.path.join(env_path, 'Scripts', 'activate.bat')\n        os.system(f\"{'source ' if os.name == 'posix' else ''}{activation_script}\")\n        return dict(msg=f\"Entered environment {env}\")"
    },
    "schema": {
        "create": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                },
                "env": {
                    "value": "_empty",
                    "type": "_empty"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "create",
            "source": {
                "start": 15,
                "length": 7,
                "path": "~/commune/commune/modules/py/py.py",
                "code": null,
                "hash": "sha256:90a992a73e40b13784d2835714ae2622552be1a6331424c21cb10c59e75a4ee0",
                "end": 22
            }
        },
        "enter": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                },
                "env": {
                    "value": "_empty",
                    "type": "_empty"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "enter",
            "source": {
                "start": 105,
                "length": 9,
                "path": "~/commune/commune/modules/py/py.py",
                "code": null,
                "hash": "sha256:597a65482f8ab011696de997f20d4dbd74cf66997e38e6b3d215a824ac7ee559",
                "end": 114
            }
        },
        "env2cmd": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "env2cmd",
            "source": {
                "start": 99,
                "length": 5,
                "path": "~/commune/commune/modules/py/py.py",
                "code": null,
                "hash": "sha256:f752810911f64d98d9fc965554d9fd64a034a9f724fa1c4a8468379d1f7a97de",
                "end": 104
            }
        },
        "env2libs": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "env2libs",
            "source": {
                "start": 49,
                "length": 2,
                "path": "~/commune/commune/modules/py/py.py",
                "code": null,
                "hash": "sha256:1eaf9bb99203c87c271305285a35ff01a6d89a5c8b64c9d87837f306d545d01e",
                "end": 51
            }
        },
        "env2path": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "env2path",
            "source": {
                "start": 42,
                "length": 3,
                "path": "~/commune/commune/modules/py/py.py",
                "code": null,
                "hash": "sha256:c8daf3d621748529b77ae09c29c3ac66b54896e8ad785a99916deeb80d6d25ba",
                "end": 45
            }
        },
        "envs": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "envs",
            "source": {
                "start": 47,
                "length": 2,
                "path": "~/commune/commune/modules/py/py.py",
                "code": null,
                "hash": "sha256:fad004ebe9945cfedf7bd58894ffdbe5fb4a5ebe29b9b845b816ed9234336249",
                "end": 49
            }
        },
        "envs_paths": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "envs_paths",
            "source": {
                "start": 53,
                "length": 2,
                "path": "~/commune/commune/modules/py/py.py",
                "code": null,
                "hash": "sha256:622aeb345f7833b26331a7d5d0b8aa2233aacb11cc3cbb55ade6612e498b97cc",
                "end": 55
            }
        },
        "get_activation_path": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                },
                "env": {
                    "value": "_empty",
                    "type": "_empty"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "get_activation_path",
            "source": {
                "start": 79,
                "length": 8,
                "path": "~/commune/commune/modules/py/py.py",
                "code": null,
                "hash": "sha256:82ae28046a933a9a9dfcd945153d124a40c4a08e2abef858a472d89ca4fa7a7f",
                "end": 87
            }
        },
        "get_env": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                },
                "env": {
                    "value": "_empty",
                    "type": "_empty"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "get_env",
            "source": {
                "start": 71,
                "length": 7,
                "path": "~/commune/commune/modules/py/py.py",
                "code": null,
                "hash": "sha256:9d0ee57743660b0db2c5b57a6bf065be469c2b27deae591957101aea05942700",
                "end": 78
            }
        },
        "install": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                },
                "env": {
                    "value": "_empty",
                    "type": "_empty"
                },
                "package_name": {
                    "value": "_empty",
                    "type": "_empty"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "install",
            "source": {
                "start": 31,
                "length": 10,
                "path": "~/commune/commune/modules/py/py.py",
                "code": null,
                "hash": "sha256:607af5772b8038d470394d1c4903d0a3d4c10511e9bc390078d4d2fdf7c93a7a",
                "end": 41
            }
        },
        "libs": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                },
                "env": {
                    "value": null,
                    "type": "NoneType"
                },
                "search": {
                    "value": null,
                    "type": "NoneType"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": "Available environments:",
            "cost": 1,
            "name": "libs",
            "source": {
                "start": 56,
                "length": 14,
                "path": "~/commune/commune/modules/py/py.py",
                "code": null,
                "hash": "sha256:2e604e4f4dd78f6697f6a63f7092d4732b66d1cfbe5804ccba72c3d18ba29232",
                "end": 70
            }
        },
        "remove": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                },
                "env": {
                    "value": "_empty",
                    "type": "_empty"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "remove",
            "source": {
                "start": 23,
                "length": 7,
                "path": "~/commune/commune/modules/py/py.py",
                "code": null,
                "hash": "sha256:1ae4f6ac461cbbcff4942f0ceedcd41ee662df09b8dab988b0f9988b339d9fd6",
                "end": 30
            }
        },
        "run": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                },
                "path": {
                    "value": "commune/modules/sandbox.py",
                    "type": "str"
                },
                "env": {
                    "value": "bt",
                    "type": "str"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "run",
            "source": {
                "start": 89,
                "length": 9,
                "path": "~/commune/commune/modules/py/py.py",
                "code": null,
                "hash": "sha256:f523b825f524420b154ed628d451e81ddca8fd17fe61ba30305e23bca8b5c19b",
                "end": 98
            }
        },
        "set_venv_path": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                },
                "venv_path": {
                    "value": "_empty",
                    "type": "_empty"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "set_venv_path",
            "source": {
                "start": 11,
                "length": 3,
                "path": "~/commune/commune/modules/py/py.py",
                "code": null,
                "hash": "sha256:9cab1eb049b0442322581114ae0ff52aaed4e712d6189bbfe0a57e2e77459dd9",
                "end": 14
            }
        }
    },
    "name": "py",
    "key": "5DJUYhMQc1gVMJ8jqAca5qZ2MSwbdk6BDphtVpMtYi1D5Yar",
    "founder": "5GKvu9qC8VPjXnofUxZP6zxTmvzTBCY1vpJAkh6gWF8YxPKy",
    "cid": "sha256:c6ae23d443537c749703b4c979eec0670699e6154abe6efc0b5ba1eeb0f2206b",
    "time": 1746536228.292338,
    "signature": "0xe8fb17359c9f3fce465608df9cc984e0205e242696fca99f3df02afff897a9280f7b0d9546e6f05b39fb16ea9a669242c870b9e80a2b393bb8472f09945b6781"
}