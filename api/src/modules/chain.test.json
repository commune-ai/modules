{
    "code": {
        "test.py": "import commune as c\n\n\nclass Test:\n\n    \n    def __init__(self, module='chain', params={\"network\": 'test'}, test_key='test'): \n        self.chain = c.module(module)(**params)\n        self.key = c.get_key(test_key)\n\n    def test_global_params(self):\n        global_params = self.chain.global_params()\n        assert isinstance(global_params, dict)\n        return {'msg': 'global_params test passed', 'success': True}\n\n    def test_subnet_params(self, subnet=0):\n        self = c.module('chain')()\n        subnet_params = self.subnet_params(subnet=subnet)\n        assert isinstance(subnet_params, dict), f'{subnet_params} is not a dict'\n        return {'msg': 'subnet_params test passed', 'success': True}\n\n\n    def test_module_params(self, keys=['dividends', 'incentive'], subnet=0):\n        key = self.chain.keys(subnet)[0]\n        module_info = self.chain.module(key, subnet=subnet)\n        assert isinstance(module_info, dict)\n        for k in keys:\n            assert k in module_info, f'{k} not in {module_info}'\n\n        return {'msg': 'module_params test passed', 'success': True, 'module_info': module_info}\n\n    def test_substrate(self):\n        for i in range(3):\n            t1 = c.time()\n            c.print(self.chain.substrate)\n            t2 = c.time()\n            c.print(f'{t2-t1:.2f} seconds')\n        return {'msg': 'substrate test passed', 'success': True}\n\n\n\n\n\n"
    },
    "schema": {
        "test_global_params": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "test_global_params",
            "source": {
                "start": 11,
                "length": 4,
                "path": "~/commune/commune/core/chain/test.py",
                "code": null,
                "hash": "sha256:88f4a13b359abd5bb36d0ef0d03594651a6d13ca709423c0bb96351432c78641",
                "end": 15
            }
        },
        "test_module_params": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                },
                "keys": {
                    "value": [
                        "dividends",
                        "incentive"
                    ],
                    "type": "list"
                },
                "subnet": {
                    "value": 0,
                    "type": "int"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "test_module_params",
            "source": {
                "start": 23,
                "length": 8,
                "path": "~/commune/commune/core/chain/test.py",
                "code": null,
                "hash": "sha256:e34681fac06602bb17d231a6e464a41ef3f7cb4f8c81bfd3830a495ab7eb94f6",
                "end": 31
            }
        },
        "test_subnet_params": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                },
                "subnet": {
                    "value": 0,
                    "type": "int"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "test_subnet_params",
            "source": {
                "start": 16,
                "length": 5,
                "path": "~/commune/commune/core/chain/test.py",
                "code": null,
                "hash": "sha256:ae831aa52f58c1504e47323a5d66432034e37d3078231072f89fe2c838359f50",
                "end": 21
            }
        },
        "test_substrate": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "test_substrate",
            "source": {
                "start": 32,
                "length": 7,
                "path": "~/commune/commune/core/chain/test.py",
                "code": null,
                "hash": "sha256:7e7e7384d224c70c128c887350751f10325771610c315452e638b46b588b6026",
                "end": 39
            }
        }
    },
    "name": "chain.test",
    "key": "5F9TKtCpZhZ2kfRMnHB3xLJjT8HPvTZuzrtwv7DdRE1BkbYg",
    "founder": "5GKvu9qC8VPjXnofUxZP6zxTmvzTBCY1vpJAkh6gWF8YxPKy",
    "cid": "sha256:b55ea8e42fe50719b5f78f4c2d3bd110c29daebdf35f54796b16019694b6d8d1",
    "time": 1746536277.190449,
    "signature": "0xb8ca7538a2e10f8f8741021613094b94fcf3c254cd61cdf7eeaaae3d60947b47b5d94ce82f9db3c0617ad0fab216f2fe2df5846bd7712d6bc2cbfd14d284ac8b"
}