{
    "code": {
        "vibe.py": "\nimport commune as c\nimport os\nclass Vibe: \n    task = 'make a dank tweet about this for the vibes include the path and score it out of 100 vibes and include'\n\n    def forward(self, module:str='module', task=task, update=False):\n        assert c.module_exists(module), f'module {module} does not exist'\n        code = c.code(module)\n        code_hash = c.hash(code)\n        path = self.get_path(f'{module}/{code_hash}')\n        vibe = c.get(path, update=update) # download the vibe if it doesn't exist\n        if vibe is not None:\n            print(f'vibe already exists at {path}')\n            return vibe\n        print(f'vibe path: {path}')\n        prompt = {\n            'code': code,\n            'tasks': [task, 'make sure the output_format follows the following within <OUTPUT_JSON> and </OUTPUT_JSON>' ],\n            'gith path': self.git_path(module=module),\n            'output_format': {\n                            \"vibe\": \"score out of 100\", \n                            \"dope_things_about_this\": \"list of dope things\", \n                            \"improvements\": \"list of improvements\"\n                            }\n        }\n        output = ''\n        for ch in c.chat(prompt, process_input=False):\n            print(ch, end='', flush=True)\n            output += ch\n        output = output.split('<OUTPUT_JSON>')[-1].split('</OUTPUT_JSON>')[0]\n\n        return output\n\n    def get_path(self, path):\n        return c.abspath(f'~/.commune/vibe/{path}')\n\n    def git_path(self, module='module', branch='main'):\n        \"\"\"\n        Get the git path of the module.\n        \"\"\"\n        dirpath =  c.dirpath(module)\n        if dirpath.split('/')[-1] == c.repo_name:\n            dirpath = os.path.dirname(dirpath)\n        git_path = ''\n\n        while len(dirpath.split('/')) > 0:\n            git_config_path = dirpath + '/.git/config'\n            if os.path.exists(git_config_path):\n                git_url = c.get_text(git_config_path).split('url = ')[-1].strip().split('\\n')[0]\n                if git_url.endswith('.git'):\n                    git_url = git_url[:-4]\n                break\n            else:\n                git_path += dirpath.split('/')[-1]\n                dirpath = os.path.dirname(dirpath)\n        # get branch\n        branch = c.get_text(dirpath + '/.git/HEAD').split('/')[-1].strip()\n        return git_url +f'/tree/{branch}/' +git_path"
    },
    "schema": {
        "forward": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                },
                "module": {
                    "value": "module",
                    "type": "str"
                },
                "task": {
                    "value": "make a dank tweet about this for the vibes include the path and score it out of 100 vibes and include",
                    "type": "str"
                },
                "update": {
                    "value": false,
                    "type": "bool"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "forward",
            "source": {
                "start": 7,
                "length": 27,
                "path": "~/commune/commune/modules/vibe/vibe.py",
                "code": null,
                "hash": "sha256:44d9956fdbc169340248f6e24dce4f9489579ff19559d7ece2ceb2c7e4383fc3",
                "end": 34
            }
        },
        "get_path": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                },
                "path": {
                    "value": "_empty",
                    "type": "_empty"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "get_path",
            "source": {
                "start": 35,
                "length": 2,
                "path": "~/commune/commune/modules/vibe/vibe.py",
                "code": null,
                "hash": "sha256:d53fbcb88f4f1d2ad9d8e752059721ca64f9591c4d865d8967629c926bf511a6",
                "end": 37
            }
        },
        "git_path": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                },
                "module": {
                    "value": "module",
                    "type": "str"
                },
                "branch": {
                    "value": "main",
                    "type": "str"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": "\n        Get the git path of the module.\n        ",
            "cost": 1,
            "name": "git_path",
            "source": {
                "start": 38,
                "length": 22,
                "path": "~/commune/commune/modules/vibe/vibe.py",
                "code": null,
                "hash": "sha256:1ca51b71bd8b86f7048a417b7d070862b64e5c10d50121f6c1f11634f14b038f",
                "end": 60
            }
        }
    },
    "name": "vibe",
    "key": "5Gq5J76fDgBUBHUWj1wi6xtgdd6nWFiPExa4beMDGDcuooRB",
    "founder": "5GKvu9qC8VPjXnofUxZP6zxTmvzTBCY1vpJAkh6gWF8YxPKy",
    "cid": "sha256:89150aad66873a97837ecee7c83693407cf3e0984ae7c5dcc9f7497f3673d058",
    "time": 1746536276.402999,
    "signature": "0x8c596a1c7d1b02af6eb0a6dfa161ab06f4de395d248f4c093e221947ddd9ab5eadd0b539525ef12182491a103f783a59454d12d1eac1828debca3eada3b64082"
}