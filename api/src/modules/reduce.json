{
    "code": {
        "reduce.py": "\nimport commune as c\nimport json\nimport os\n\n\nclass Reduce:\n    description = \"This module is used to find files and modules in the current directory\"\n    model='google/gemini-2.0-flash-001'\n    agent= c.module('agent')()\n    def forward(self,  text, model=model,  timeout=10, **kwargs):  \n        text = f'''\n        GOAL\n        summarize the following into tupples and make sure you compress as much as oyu can\n        CONTEXT\n        {text}\n        OUTPUT FORMAT IN JSON FORMAT ONLY BETWEEN THE ANCHORS ONLY INCLUDE PURE JSON, NO TEXT\n        <OUTPUT>JSON(data:list[])</OUTPUT>\n        '''\n        assert len(text) < 20000\n        return self.process_data(self.ask(text, model=model, stream=0))\n\n\n    def files(self, path='./',  query='the file that is the core of this folder', timeout=30):\n\n        model = self.model\n        future2file = {}\n        file2text = {}\n        for file in c.files(path):\n            try:\n                file2text[file] = c.text(file)\n                future = c.submit(self.forward, {'text': c.text(file), 'model': model, 'timeout': 10})\n            except Exception as e:\n                print(f\"Error processing {file}: {c.detailed_error(e)}\")\n                continue\n            future2file[future] = file\n        files = []\n        for future in c.as_completed(future2file, timeout=timeout):\n            file = future2file[future]\n            try:\n                data = future.result()\n                if query in data:\n                    files.append(data)\n            except Exception as e:\n                print(f\"Error processing {file}: {e}\")\n\n        return files\n    def process_data(self, data):\n        try:\n            data = data.split('<OUTPUT>')[1].split('</OUTPUT>')[0]\n            data = json.loads(data)\n            return data\n        except:\n            return c\n\n    "
    },
    "schema": {
        "files": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                },
                "path": {
                    "value": "./",
                    "type": "str"
                },
                "query": {
                    "value": "the file that is the core of this folder",
                    "type": "str"
                },
                "timeout": {
                    "value": 30,
                    "type": "int"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "files",
            "source": {
                "start": 24,
                "length": 24,
                "path": "~/commune/commune/modules/reduce/reduce.py",
                "code": null,
                "hash": "sha256:bd502d58389ffa9b12aeb0695fab5ca7befc54e33ac183ba068c9093900a0ba8",
                "end": 48
            }
        },
        "forward": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                },
                "text": {
                    "value": "_empty",
                    "type": "_empty"
                },
                "model": {
                    "value": "google/gemini-2.0-flash-001",
                    "type": "str"
                },
                "timeout": {
                    "value": 10,
                    "type": "int"
                },
                "kwargs": {
                    "value": "_empty",
                    "type": "_empty"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "forward",
            "source": {
                "start": 11,
                "length": 11,
                "path": "~/commune/commune/modules/reduce/reduce.py",
                "code": null,
                "hash": "sha256:084c76c634e8c8c1d546e314b6bfcdb8ba4b3d93768da2ee7219816df0cae417",
                "end": 22
            }
        },
        "process_data": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                },
                "data": {
                    "value": "_empty",
                    "type": "_empty"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "process_data",
            "source": {
                "start": 48,
                "length": 7,
                "path": "~/commune/commune/modules/reduce/reduce.py",
                "code": null,
                "hash": "sha256:116934f204695f70b8ee8858ea9a90e935e1378915d076001e0b7f783931ae63",
                "end": 55
            }
        }
    },
    "name": "reduce",
    "key": "5HipEPnVLYfzsbdehaAxEx5Z1ADgFvWsQQRpmTJxwDomfTgD",
    "founder": "5GKvu9qC8VPjXnofUxZP6zxTmvzTBCY1vpJAkh6gWF8YxPKy",
    "cid": "sha256:fd7f8de235ade4e09141365550f70fe1c9f8d7017f8b876b5596170b6cd0923c",
    "time": 1746536304.783693,
    "signature": "0x3ccac5853063f5d8586bae2bbd169979701d2e0fb92cd62cfee3e229fec90710fef0c1a611042a0ebf35c8fadde727eb96e99d2797ca3e295e753c19c2894481"
}