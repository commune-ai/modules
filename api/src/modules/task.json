{
    "code": {
        "___init__.py": "from .task import Task",
        "base/task.py": "class BaseTask:\n    description = 'Base task for commune'\n    features = ['url', 'name', 'score']\n\n    def __init__(self, fn='info', params=None):\n        \"\"\"\n        Initialize the task with a function and parameters\n        \"\"\"\n        self.fn = fn\n        self.params = params or {}\n\n    def get_params(self,params=None):\n        \"\"\"\n        Get a sample from the module\n        \"\"\"\n        if params == None:\n            params = {\n                'fn': self.fn,\n                'params': self.params,\n            }\n\n        assert isinstance(params, dict)\n        assert 'fn' in params\n        assert 'params' in params\n\n        return params\n\n    def forward(self,module, params=None):\n        params = self.get_params(params)\n        result =  getattr(module, params['fn'])(**params['params'])\n        assert isinstance(result, dict)\n        assert 'name' in result\n        return 1",
        "task.py": "class Task:\n    description = 'Base task for commune'\n    features = ['url', 'name', 'score']\n\n    def __init__(self, fn='info', params=None):\n        \"\"\"\n        Initialize the task with a function and parameters\n        \"\"\"\n        self.fn = fn\n        self.params = params or {}\n\n    def forward(self,module, **params):\n        params = {**self.params, **params}\n        result =  getattr(module, self.fn)(**params)\n        if 'url' in result:\n            score = 1\n        else: \n            score = 0\n        return {'score': score, 'result': result, 'params': params}"
    },
    "schema": {
        "forward": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                },
                "module": {
                    "value": "_empty",
                    "type": "_empty"
                },
                "params": {
                    "value": "_empty",
                    "type": "_empty"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "forward",
            "source": {
                "start": 12,
                "length": 8,
                "path": "~/commune/commune/modules/task/task.py",
                "code": null,
                "hash": "sha256:bd3c5f2419c0148a5aee04cca505178ede88c7705e6d4f3e1f515fea95b97436",
                "end": 20
            }
        }
    },
    "name": "task",
    "key": "5GP74NonAS8j8kGy59yhqBFo8b9okKVpXEP1Vr2ECUHiBGf3",
    "founder": "5GKvu9qC8VPjXnofUxZP6zxTmvzTBCY1vpJAkh6gWF8YxPKy",
    "cid": "sha256:f174b4a1a2893de6e50e1469f743ba22f0d88006d3f0eebc46d239700f1634a7",
    "time": 1746536249.868653,
    "signature": "0xc678f7d8614545fa8e520c9935c5e45f6bee79dc66220669585aabf8b2526e03c4cf448ae7a7fd841656d94f34549d1c364caa33fffe47c2b1ff63e107fe8e80"
}