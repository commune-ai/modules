{
    "code": {
        "repo.py": "import commune as c\nimport os\n\nclass Repo(c.Module):\n    def __init__(self, a=1, b=2):\n        self.set_config(locals())\n\n    def is_repo(self, path):\n        # is a directory \n        cond = [\n            os.path.isdir(path), \n            os.path.isdir(os.path.join(path, '.git')),\n            os.path.isfile(os.path.join(path, '.git/config'))\n        ]\n        return all(cond)\n    \n    def find_repo_paths(self, path = None, avoid_strings = ['.cargo']):\n        if path == None:\n            path = c.home_path\n        repos = []\n        c.print(path)\n        for root, dirs, files in os.walk(path):\n            if any([avoid in root for avoid in avoid_strings]):\n                continue\n            if '.git' in dirs and os.path.isfile(os.path.join(root, '.git/config')):\n                repos.append(root)\n        return repos\n    \n\n\n\n    @classmethod\n    def dashboard(cls):\n        import streamlit as st\n        import pandas as pd\n        self = cls()\n        c.load_style()\n        update_button = st.button('Update')\n        if update_button:\n            c.submit(self.update)\n        repo2path = self.repo2path()\n        repos = list(repo2path.keys())\n        repo = st.selectbox('Repo', repos)\n        repo_pull_button = st.button('pull')\n        if repo_pull_button:\n            st.write('pulling')\n            st.write(repo)\n            c.submit(self.pull_repo, args=[repo])\n        repo_path = repo2path[repo]\n        tabs = ['explorer', 'manager']\n        tabs = st.tabs(tabs)\n        with tabs[0]:\n            self.repo_explorer(repo_path)\n        with tabs[1]:\n            self.repo_manager()\n        st.write(repo_path)\n\n    def git_files(self, repo):\n        repo_path = self.repo2path()[repo]\n        return c.glob(repo_path+'/.git/**/*')\n\n    def submodules(self, repo):\n        repo_path = self.repo2path()[repo]\n        submodules = c.ls(repo_path+'/.git/modules')\n        submodules = [os.path.basename(s) for s in submodules if os.path.basename(s) != 'config']\n        return submodules\n    \n    def repo2submodules(self):\n        repo2submodules = {}\n        for repo in self.repos():\n            repo2submodules[repo] = self.submodules(repo)\n        return repo2submodules\n    \n\n    \n    def repo_explorer(self, repo_path):\n        \n        repo_files = c.glob(repo_path)\n        readme_files = [file for file in repo_files if 'readme' in file.lower()]\n        with st.expander('files'):\n            selected_files = st.multiselect('files', repo_files)\n            file2text = { file: c.get_text(file) for file in selected_files}\n\n            for file, text in file2text.items():\n                st.write(file)\n                st.markdown(text)\n\n        with st.expander('readme', True):\n            if len(readme_files) == 0:\n                c.print('No readme found')\n\n            readme_text = c.get_text(readme_files[0])\n            st.write(readme_text)\n\n\n\n\n    def rm_repo(self, repo):\n        repo_path = self.repo2path()[repo]\n        c.rm(repo_path)\n        self.update()\n        repos = self.repos()\n        assert repo not in repos\n        return {'success': True, 'path': repo_path, 'repo': repo, \n                'msg': f'Repo {repo} removed successfully'}\n\n\n    def repo_paths(self):\n        return list(self.repo2path().values())\n    def add_repo(self, repo_path, path = None, cwd = None, sudo=False):\n        repo_name =  os.path.basename(repo_path).replace('.git', '')\n        if path == None:\n            path = os.path.abspath(os.path.expanduser('~/'+ repo_name))\n        assert not os.path.isdir(path), f'{path} already exists'\n\n        c.cmd(f'git clone {repo_path}', verbose=True, cwd=cwd, sudo=sudo)\n\n\n        repo_paths = self.repo_paths()\n\n        assert path in repo_paths\n\n        return {'success': True, 'path': path, 'repo_path': repo_path}\n    \n    def repos(self, *args, **kwargs):\n        return list(self.repo2path(*args, **kwargs).keys())\n    def repo_manager(self):\n        with st.expander('Add Repo'):\n            cols = st.columns(2)\n            repo_path = cols[0].text_input('Repo Path')\n            repo_name = repo_path.split('/')[-1] if '/' in repo_path else None\n            repo_name = cols[1].text_input('Repo Name', value=repo_name)\n            add_repo_button = st.button('Add Repo')\n            if add_repo_button:\n                self.add_repo(repo_path, repo_name)\n\n        with st.expander('Remove Repo'):\n            cols = st.columns(2)\n            repo = cols[0].selectbox('Repo', list(self.repo2path().keys()), key='remove_repo')\n            remove_repo_button = st.button('Remove Repo')\n            if remove_repo_button:\n                self.remove_repo(repo)\n\n        \n\n    def pull_repo(self, repo):\n        repo_path = self.repo2path()[repo]\n        return c.cmd(f'git pull', cwd=repo_path)\n    \n\n        \n    def pull_many(self, *repos, timeout=20):\n        futures = []\n        for repo in repos:\n            futures.append(c.submit(self.pull_repo, args=[repo], timeout=timeout))\n        return c.wait(futures, timeout=timeout)\n\n"
    },
    "schema": {
        "add_repo": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                },
                "repo_path": {
                    "value": "_empty",
                    "type": "_empty"
                },
                "path": {
                    "value": null,
                    "type": "NoneType"
                },
                "cwd": {
                    "value": null,
                    "type": "NoneType"
                },
                "sudo": {
                    "value": false,
                    "type": "bool"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "add_repo",
            "source": {
                "start": 110,
                "length": 14,
                "path": "~/commune/commune/modules/repo/repo.py",
                "code": null,
                "hash": "sha256:ca7edc345530f547d433fe4b39e7d56f76624ee1da76a8cdbbd6e819ea0dbdea",
                "end": 124
            }
        },
        "dashboard": {
            "input": {},
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "dashboard",
            "source": {
                "start": 32,
                "length": 25,
                "path": "~/commune/commune/modules/repo/repo.py",
                "code": null,
                "hash": "sha256:f134f40a3432808a86b0b675c9b85f37b166b141892855b909470158c57c12d6",
                "end": 57
            }
        },
        "find_repo_paths": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                },
                "path": {
                    "value": null,
                    "type": "NoneType"
                },
                "avoid_strings": {
                    "value": [
                        ".cargo"
                    ],
                    "type": "list"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "find_repo_paths",
            "source": {
                "start": 17,
                "length": 11,
                "path": "~/commune/commune/modules/repo/repo.py",
                "code": null,
                "hash": "sha256:bfbc54b4cf2ac0a82f1963ddc95774c5d0added95713c302e6acd08d89cefb97",
                "end": 28
            }
        },
        "git_files": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                },
                "repo": {
                    "value": "_empty",
                    "type": "_empty"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "git_files",
            "source": {
                "start": 58,
                "length": 3,
                "path": "~/commune/commune/modules/repo/repo.py",
                "code": null,
                "hash": "sha256:603e42c6b9ad6cf077c944b56301fed49fd581c9e646d1056bab5945466b0296",
                "end": 61
            }
        },
        "is_repo": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                },
                "path": {
                    "value": "_empty",
                    "type": "_empty"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "is_repo",
            "source": {
                "start": 8,
                "length": 8,
                "path": "~/commune/commune/modules/repo/repo.py",
                "code": null,
                "hash": "sha256:955ddc38adb4d4b1dbb18f4e215ded4f85d34dde578bb65075443665a0594271",
                "end": 16
            }
        },
        "pull_many": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                },
                "repos": {
                    "value": "_empty",
                    "type": "_empty"
                },
                "timeout": {
                    "value": 20,
                    "type": "int"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "pull_many",
            "source": {
                "start": 152,
                "length": 5,
                "path": "~/commune/commune/modules/repo/repo.py",
                "code": null,
                "hash": "sha256:5d34cb11ba53f10a262ed3514928a6bdaa8e920d5d9744a91d1d67d29401b768",
                "end": 157
            }
        },
        "pull_repo": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                },
                "repo": {
                    "value": "_empty",
                    "type": "_empty"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "pull_repo",
            "source": {
                "start": 146,
                "length": 3,
                "path": "~/commune/commune/modules/repo/repo.py",
                "code": null,
                "hash": "sha256:d7cd139525e8237bc7c98ba1d6fe7bc3a16837ca05611205c57ab21c31dafb39",
                "end": 149
            }
        },
        "repo2submodules": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "repo2submodules",
            "source": {
                "start": 68,
                "length": 5,
                "path": "~/commune/commune/modules/repo/repo.py",
                "code": null,
                "hash": "sha256:bd6770a872d678acc2b47c573bab8130015c3a35499534cbf21e7a1eff8e9868",
                "end": 73
            }
        },
        "repo_explorer": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                },
                "repo_path": {
                    "value": "_empty",
                    "type": "_empty"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "repo_explorer",
            "source": {
                "start": 76,
                "length": 18,
                "path": "~/commune/commune/modules/repo/repo.py",
                "code": null,
                "hash": "sha256:728c350efc279fa3090493e7ac5b8a17303d2cbd65ac73a1c12ec977dea64d46",
                "end": 94
            }
        },
        "repo_manager": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "repo_manager",
            "source": {
                "start": 127,
                "length": 16,
                "path": "~/commune/commune/modules/repo/repo.py",
                "code": null,
                "hash": "sha256:a822d39e16972166d828f4b6d029fe7d1b33d4d3dcebe883d0c320276ac8a69a",
                "end": 143
            }
        },
        "repo_paths": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "repo_paths",
            "source": {
                "start": 108,
                "length": 2,
                "path": "~/commune/commune/modules/repo/repo.py",
                "code": null,
                "hash": "sha256:b0df37a921ba97f03630adb23897a9cd1e1f67c9aec74c3c7c037e151b744230",
                "end": 110
            }
        },
        "repos": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                },
                "args": {
                    "value": "_empty",
                    "type": "_empty"
                },
                "kwargs": {
                    "value": "_empty",
                    "type": "_empty"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "repos",
            "source": {
                "start": 125,
                "length": 2,
                "path": "~/commune/commune/modules/repo/repo.py",
                "code": null,
                "hash": "sha256:3bd0460d7a685f2ec97f2cefa9dabb2a559fc6a8e7311129c4f850b667633e2b",
                "end": 127
            }
        },
        "rm_repo": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                },
                "repo": {
                    "value": "_empty",
                    "type": "_empty"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "rm_repo",
            "source": {
                "start": 98,
                "length": 8,
                "path": "~/commune/commune/modules/repo/repo.py",
                "code": null,
                "hash": "sha256:485a0a74a3b1abb1adc734c10d4e4281ac8580a47979d2ee500af2e834c5ccc7",
                "end": 106
            }
        },
        "submodules": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                },
                "repo": {
                    "value": "_empty",
                    "type": "_empty"
                }
            },
            "output": {
                "value": null,
                "type": "None"
            },
            "docs": null,
            "cost": 1,
            "name": "submodules",
            "source": {
                "start": 62,
                "length": 5,
                "path": "~/commune/commune/modules/repo/repo.py",
                "code": null,
                "hash": "sha256:b69ce1bfa59f66d4af887e2d92ca5961d5b12e8393dbbc7b185c69335abb6f8f",
                "end": 67
            }
        }
    },
    "name": "repo",
    "key": "5GQyBj2iH6ujxKPiThmgeByrUT7YW7Hm9JGaBFcQS4wvgf3t",
    "founder": "5GKvu9qC8VPjXnofUxZP6zxTmvzTBCY1vpJAkh6gWF8YxPKy",
    "cid": "sha256:bb3b3b7ac19b4604095c2f099302605572fa05b5da8478dd03eacccfd10a50dd",
    "time": 1746536232.599068,
    "signature": "0x329e1fc7823990507ead7e7184e83455a24841f820563a478dd90329ce842e7f95367298f21907d355858fd0ec2a88b0c43abfe2a2a968f8257e196a5485ca8c"
}