{
    "code": {
        "summarize.py": "\nimport commune as c\nimport json\nimport os\nfrom typing import List, Dict, Union, Optional, Any\n\nprint = c.print\nclass Summarize:\n    \"\"\"\n    Advanced search and relevance ranking module powered by LLMs.\n    \n    This module helps find the most relevant items from a list of options based on a query,\n    using LLM-based semantic understanding to rank and filter options.\n    \"\"\"\n\n    \n    def __init__(self, provider='dev.model.openrouter'):\n        \"\"\"\n        Initialize the Find module.\n        \n        Args:\n            model: Pre-initialized model instance (optional)\n            default_provider: Provider to use if no model is provided\n            default_model: Default model to use for ranking\n        \"\"\"\n        self.model = c.module(provider)()\n        self.anchors = [\"<START_JSON>\", \"</END_JSON>\"]\n\n    def forward(self,  \n              path: str = __file__, # Path to the file containing options or a file  \n              query: str = 'most relevant', \n              model: str = None,\n              temperature: float = 0.5,\n              task = None,\n              verbose: bool = True) -> List[str]:\n        anchors = self.anchors\n        # Format context if provided\n        assert os.path.exists(path), f\"File not found: {path}\"\n        assert os.path.isfile(path), f\"Path is not a file: {path}\"\n        content = c.text(path)\n\n        # hash\n        cache_path = 'reuslts/' + c.hash(path)\n\n        # Build the prompt\n\n        prompt = f'''\n        TASK\n        - summarize the follwoing based on the format based on the wquery \n        - query --> {query}\n        CONTENT\n        {content} \n        RESULT_FORMAT\n        {anchors[0]}(LIST(DICT(obj:str, desc:str))){anchors[1]}\n        '''\n        \n        # Generate the response\n        output = ''\n        response = self.model.forward( \n            prompt, \n            model=model, \n            stream=True,\n            temperature=temperature\n        )\n\n        # PROCEESS THE REPSONSE \n        for ch in response: \n            if verbose:\n                print(ch, end='')\n            output += ch\n\n        output = anchors[0].join(output.split(anchors[0])[1:])\n        output = anchors[1].join(output.split(anchors[1])[:-1])\n        if verbose:\n            print(\"\\nParsing response...\", color=\"cyan\")\n            \n        result =   json.loads(output)\n    \n        return result\n"
    },
    "schema": {
        "forward": {
            "input": {
                "self": {
                    "value": "_empty",
                    "type": "_empty"
                },
                "path": {
                    "value": "/Users/homie/commune/commune/modules/dev/src/dev/tool/summarize.py",
                    "type": "str"
                },
                "query": {
                    "value": "most relevant",
                    "type": "str"
                },
                "model": {
                    "value": null,
                    "type": "NoneType"
                },
                "temperature": {
                    "value": 0.5,
                    "type": "float"
                },
                "task": {
                    "value": null,
                    "type": "NoneType"
                },
                "verbose": {
                    "value": true,
                    "type": "bool"
                }
            },
            "output": {
                "value": null,
                "type": "typing.List[str]"
            },
            "docs": null,
            "cost": 1,
            "name": "forward",
            "source": {
                "start": 29,
                "length": 51,
                "path": "~/commune/commune/modules/dev/src/dev/tool/summarize.py",
                "code": null,
                "hash": "sha256:b1ff39367097b9eebda251253f5dc420141984640c1f8cb8cda43421a97ae682",
                "end": 80
            }
        }
    },
    "name": "dev.tool.summarize",
    "key": "5CVWLjfuEG72B55djdW2T9VXGKLyswVvwysE1Baks7tGGXJW",
    "founder": "5GKvu9qC8VPjXnofUxZP6zxTmvzTBCY1vpJAkh6gWF8YxPKy",
    "cid": "sha256:162b6e4c4654b58a7e084bc653bf402118a6bd3ac26a95e75d4cb22a0d955f7b",
    "time": 1746536302.7249012,
    "signature": "0x8427dfb20c7a2ad08c543fed35aa160c93be146a1c10ff4eb544cdb9be94857a1d82c9497fd2d65274a02d477986aca12343965401e019aaf3ea661001e1b882"
}